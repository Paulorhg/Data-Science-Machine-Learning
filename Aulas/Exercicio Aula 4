{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Exercicio Aula 4","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyP7B/s+VluUpVtToYeSm9AL"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"bHQzSgRFqnvO","executionInfo":{"status":"ok","timestamp":1648771604828,"user_tz":180,"elapsed":266,"user":{"displayName":"Paulo Ricardo Horta Grando","userId":"15533585463774356119"}}},"outputs":[],"source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","\n","df_inicial = pd.read_csv('titanic.data')\n","\n","df = df_inicial.drop(['Name','Cabin', 'PassengerId', 'Ticket'], axis = 1)\n","\n","df['Sex'] = df.Sex.map({\"female\":0, \"male\":1})\n","\n","values = {'Age': 20, 'Embarked': 'Missing'}\n","df = df.fillna(value=values)\n","df = pd.get_dummies(df, columns=['Embarked'])\n","\n","X = df.drop(columns=['Survived'])\n","y = df.Survived\n","\n","X_train, X_test, y_train, y_test = train_test_split(\n","    X, y, test_size=0.33, random_state=42)"]},{"cell_type":"code","source":["# ELIMINACAO SEQUENCIAL\n","\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n","\n","import numpy as np\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","# cria um vetor que vai auxiliar a identificar quais registros são considerados\n","# no treino e quais não são, como se fosse um filtro\n","indices = []\n","for _ in range(len(X_train)):\n","  indices.append(True)\n","\n","# faz a logica de tentar eliminar cada registro e ver se está correto\n","for i in range(len(X_train)):\n","  indices[i] = False\n","  model = KNeighborsClassifier(n_neighbors = 1)\n","  model.fit(X_train[indices], y_train[indices])\n","\n","  pred = model.predict([X_train.values[i]])\n","  if pred != y_train.values[i]:\n","    indices[i] = True\n","\n","print(\"Quantas amostras de treino sobraram:\", len(X_train[indices]))\n","\n","# calcula o resultado final depois da redução\n","\n","model = KNeighborsClassifier(n_neighbors = 1)\n","model.fit(X_train[indices], y_train[indices])\n","pred = model.predict(X_test)\n","\n","print(\"Acurácia:\", (pred == y_test).sum() / len(X_test) * 100)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QQc8Z2WdrF8p","executionInfo":{"status":"ok","timestamp":1648774727997,"user_tz":180,"elapsed":2405,"user":{"displayName":"Paulo Ricardo Horta Grando","userId":"15533585463774356119"}},"outputId":"2eb06097-9d82-4002-99d8-e2ccdbd4ee0f"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Quantas amostras de treino sobraram: 271\n","Acurácia: 65.76271186440678\n"]}]},{"cell_type":"code","source":["# INSERCAO SEQUENCIAL\n","\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n","\n","import numpy as np\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","k = 2\n","\n","# cria um vetor que vai auxiliar a identificar quais registros são considerados\n","# no treino e quais não são, como se fosse um filtro\n","indices = []\n","for _ in range(len(X_train)):\n","  indices.append(False)\n","\n","# inclui a primeira amostra ja que o modelo nunca vai acertar\n","for i in range(k):\n","  indices[i] = True\n","\n","# faz a logica de tentar inserir cada registro e ver se está correto\n","for i in range(k,len(X_train)):\n","  \n","  model = KNeighborsClassifier(n_neighbors = k)\n","  model.fit(X_train[indices], y_train[indices])\n","\n","  pred = model.predict([X_train.values[i]])\n","  if pred != y_train.values[i]:\n","    indices[i] = True\n","\n","print(\"Quantas amostras de treino sobraram:\", len(X_train[indices]))\n","\n","# calcula o resultado final depois das insercoes\n","\n","model = KNeighborsClassifier(n_neighbors = k)\n","model.fit(X_train[indices], y_train[indices])\n","pred = model.predict(X_test)\n","\n","print(\"Acurácia:\", (pred == y_test).sum() / len(X_test) * 100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2kPqGgcydG2S","executionInfo":{"status":"ok","timestamp":1648775285923,"user_tz":180,"elapsed":2338,"user":{"displayName":"Paulo Ricardo Horta Grando","userId":"15533585463774356119"}},"outputId":"da20391b-284f-4509-80b4-825a3e5ac6fa"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Quantas amostras de treino sobraram: 224\n","Acurácia: 66.44067796610169\n"]}]},{"cell_type":"markdown","source":["# Nova seção"],"metadata":{"id":"KHD45rymsgHz"}}]}